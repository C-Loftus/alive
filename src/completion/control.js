module.exports = [
    { label: 'apply' },
    { label: 'defun' },
    { label: 'fdefinition' },
    { label: 'fboundp' },
    { label: 'fmakunbound' },
    { label: 'flet' },
    { label: 'labels' },
    { label: 'macrolet' },
    { label: 'funcall' },
    { label: 'function' },
    { label: 'function-lambda-expression' },
    { label: 'functionp' },
    { label: 'compiled-function-p' },
    { label: 'call-arguments-limit' },
    { label: 'lambda-list-keywords' },
    { label: 'lambda-parameters-limit' },
    { label: 'defconstant' },
    { label: 'defparameter' },
    { label: 'defvar' },
    { label: 'destructuring-bind' },
    { label: 'let' },
    { label: 'let*' },
    { label: 'progv' },
    { label: 'setq' },
    { label: 'psetq' },
    { label: 'block' },
    { label: 'catch' },
    { label: 'go' },
    { label: 'return-from' },
    { label: 'return' },
    { label: 'tagbody' },
    { label: 'throw' },
    { label: 'unwind-protect' },
    { label: 'nil' },
    { label: 'not' },
    { label: 't' },
    { label: 'eq' },
    { label: 'eql' },
    { label: 'equal' },
    { label: 'equalp' },
    { label: 'identity' },
    { label: 'complement' },
    { label: 'constantly' },
    { label: 'every' },
    { label: 'some' },
    { label: 'notevery' },
    { label: 'notany' },
    { label: 'and' },
    { label: 'cond' },
    { label: 'if' },
    { label: 'or' },
    { label: 'when' },
    { label: 'unless' },
    { label: 'case' },
    { label: 'ccase' },
    { label: 'ecase' },
    { label: 'typecase' },
    { label: 'ctypecase' },
    { label: 'etypecase' },
    { label: 'multiple-value-bind' },
    { label: 'multiple-value-call' },
    { label: 'multiple-value-list' },
    { label: 'multiple-value-prog1' },
    { label: 'multiple-value-setq' },
    { label: 'values' },
    { label: 'values-list' },
    { label: 'multiple-values-limit' },
    { label: 'nth-value' },
    { label: 'prog' },
    { label: 'prog*' },
    { label: 'prog1' },
    { label: 'prog2' },
    { label: 'progn' },
    { label: 'define-modify-macro' },
    { label: 'defsetf' },
    { label: 'define-setf-expander' },
    { label: 'get-setf-expansion' },
    { label: 'setf' },
    { label: 'psetf' },
    { label: 'shiftf' },
    { label: 'rotatef' },
    { label: 'control-error' },
    { label: 'program-error' },
    { label: 'undefined-function' },
];
