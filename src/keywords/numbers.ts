export default [
    { label: 'number', type: 'System Class' },
    { label: 'complex', type: 'System Class' },
    { label: 'real', type: 'System Class' },
    { label: 'float', type: 'System Class' },
    { label: 'short-float', type: 'Type' },
    { label: 'single-float', type: 'Type' },
    { label: 'double-float', type: 'Type' },
    { label: 'long-float', type: 'Type' },
    { label: 'rational', type: 'System Class' },
    { label: 'ratio', type: 'System Class' },
    { label: 'integer', type: 'System Class' },
    { label: 'signed-byte', type: 'Type' },
    { label: 'unsigned-byte', type: 'Type' },
    { label: 'mod', type: 'Type Specifier' },
    { label: 'bit', type: 'Type' },
    { label: 'fixnum', type: 'Type' },
    { label: 'bignum', type: 'Type' },
    { label: '=', type: 'Function' },
    { label: '/=', type: 'Function' },
    { label: '<', type: 'Function' },
    { label: '>', type: 'Function' },
    { label: '<=', type: 'Function' },
    { label: '>=', type: 'Function' },
    { label: 'max', type: 'Function' },
    { label: 'min', type: 'Function' },
    { label: 'minusp', type: 'Function' },
    { label: 'plusp', type: 'Function' },
    { label: 'zerop', type: 'Function' },
    { label: 'floor', type: 'Function' },
    { label: 'ffloor', type: 'Function' },
    { label: 'ceiling', type: 'Function' },
    { label: 'fceiling', type: 'Function' },
    { label: 'truncate', type: 'Function' },
    { label: 'ftruncate', type: 'Function' },
    { label: 'round', type: 'Function' },
    { label: 'fround', type: 'Function' },
    { label: 'sin', type: 'Function' },
    { label: 'cos', type: 'Function' },
    { label: 'tan', type: 'Function' },
    { label: 'asin', type: 'Function' },
    { label: 'acos', type: 'Function' },
    { label: 'atan', type: 'Function' },
    { label: 'pi', type: 'Constant Variable' },
    { label: 'sinh', type: 'Function' },
    { label: 'cosh', type: 'Function' },
    { label: 'tanh', type: 'Function' },
    { label: 'asinh', type: 'Function' },
    { label: 'acosh', type: 'Function' },
    { label: 'atanh', type: 'Function' },
    { label: '*', type: 'Function' },
    { label: '+', type: 'Function' },
    { label: '-', type: 'Function' },
    { label: '/', type: 'Function' },
    { label: '1+', type: 'Function' },
    { label: '1-', type: 'Function' },
    { label: 'abs', type: 'Function' },
    { label: 'evenp', type: 'Function' },
    { label: 'oddp', type: 'Function' },
    { label: 'exp', type: 'Function' },
    { label: 'expt', type: 'Function' },
    { label: 'gcd', type: 'Function' },
    { label: 'incf', type: 'Macro' },
    { label: 'decf', type: 'Macro' },
    { label: 'lcm', type: 'Function' },
    { label: 'log', type: 'Function' },
    { label: 'mod', type: 'Function' },
    { label: 'rem', type: 'Function' },
    { label: 'signum', type: 'Function' },
    { label: 'sqrt', type: 'Function' },
    { label: 'isqrt', type: 'Function' },
    { label: 'random-state', type: 'System Class' },
    { label: 'make-random-state', type: 'Function' },
    { label: 'random', type: 'Function' },
    { label: 'random-state-p', type: 'Function' },
    { label: '*random-state*', type: 'Variable' },
    { label: 'numberp', type: 'Function' },
    { label: 'cis', type: 'Function' },
    { label: 'complex', type: 'Function' },
    { label: 'complexp', type: 'Function' },
    { label: 'conjugate', type: 'Function' },
    { label: 'phase', type: 'Function' },
    { label: 'realpart', type: 'Function' },
    { label: 'imagpart', type: 'Function' },
    { label: 'upgraded-complex-part-type', type: 'Function' },
    { label: 'realp', type: 'Function' },
    { label: 'numerator', type: 'Function' },
    { label: 'denominator', type: 'Function' },
    { label: 'rational', type: 'Function' },
    { label: 'rationalize', type: 'Function' },
    { label: 'rationalp', type: 'Function' },
    { label: 'ash', type: 'Function' },
    { label: 'integer-length', type: 'Function' },
    { label: 'integerp', type: 'Function' },
    { label: 'parse-integer', type: 'Function' },
    { label: 'boole', type: 'Function' },
    { label: 'boole-1', type: 'Constant Variable' },
    { label: 'boole-2', type: 'Constant Variable' },
    { label: 'boole-and', type: 'Constant Variable' },
    { label: 'boole-andc1', type: 'Constant Variable' },
    { label: 'boole-andc2', type: 'Constant Variable' },
    { label: 'boole-c1', type: 'Constant Variable' },
    { label: 'boole-c2', type: 'Constant Variable' },
    { label: 'boole-clr', type: 'Constant Variable' },
    { label: 'boole-eqv', type: 'Constant Variable' },
    { label: 'boole-ior', type: 'Constant Variable' },
    { label: 'boole-nand', type: 'Constant Variable' },
    { label: 'boole-nor', type: 'Constant Variable' },
    { label: 'boole-orc1', type: 'Constant Variable' },
    { label: 'boole-orc2', type: 'Constant Variable' },
    { label: 'boole-set', type: 'Constant Variable' },
    { label: 'boole-xor', type: 'Constant Variable' },
    { label: 'logand', type: 'Function' },
    { label: 'logandc1', type: 'Function' },
    { label: 'logandc2', type: 'Function' },
    { label: 'logeqv', type: 'Function' },
    { label: 'logior', type: 'Function' },
    { label: 'lognand', type: 'Function' },
    { label: 'lognor', type: 'Function' },
    { label: 'lognot', type: 'Function' },
    { label: 'logorc1', type: 'Function' },
    { label: 'logorc2', type: 'Function' },
    { label: 'logxor', type: 'Function' },
    { label: 'logbitp', type: 'Function' },
    { label: 'logcount', type: 'Function' },
    { label: 'logtest', type: 'Function' },
    { label: 'byte', type: 'Function' },
    { label: 'byte-size', type: 'Function' },
    { label: 'byte-position', type: 'Function' },
    { label: 'deposit-field', type: 'Function' },
    { label: 'dpb', type: 'Function' },
    { label: 'ldb', type: 'Accessor' },
    { label: 'ldb-test', type: 'Function' },
    { label: 'mask-field', type: 'Accessor' },
    { label: 'most-positive-fixnum', type: 'Constant Variable' },
    { label: 'most-negative-fixnum', type: 'Constant Variable' },
    { label: 'decode-float', type: 'Function' },
    { label: 'scale-float', type: 'Function' },
    { label: 'float-radix', type: 'Function' },
    { label: 'float-sign', type: 'Function' },
    { label: 'float-digits', type: 'Function' },
    { label: 'float-precision', type: 'Function' },
    { label: 'integer-decode-float', type: 'Function' },
    { label: 'float', type: 'Function' },
    { label: 'floatp', type: 'Function' },
    { label: 'most-positive-short-float', type: 'Constant Variable' },
    { label: 'least-positive-short-float', type: 'Constant Variable' },
    {
        label: 'least-positive-normalized-short-float',
        type: 'Constant Variable',
    },
    { label: 'most-positive-double-float', type: 'Constant Variable' },
    { label: 'least-positive-double-float', type: 'Constant Variable' },
    {
        label: 'least-positive-normalized-double-float',
        type: 'Constant Variable',
    },
    { label: 'most-positive-long-float', type: 'Constant Variable' },
    { label: 'least-positive-long-float', type: 'Constant Variable' },
    {
        label: 'least-positive-normalized-long-float',
        type: 'Constant Variable',
    },
    { label: 'most-positive-single-float', type: 'Constant Variable' },
    { label: 'least-positive-single-float', type: 'Constant Variable' },
    {
        label: 'least-positive-normalized-single-float',
        type: 'Constant Variable',
    },
    { label: 'most-negative-short-float', type: 'Constant Variable' },
    { label: 'least-negative-short-float', type: 'Constant Variable' },
    {
        label: 'least-negative-normalized-short-float',
        type: 'Constant Variable',
    },
    { label: 'most-negative-single-float', type: 'Constant Variable' },
    { label: 'least-negative-single-float', type: 'Constant Variable' },
    {
        label: 'least-negative-normalized-single-float',
        type: 'Constant Variable',
    },
    { label: 'most-negative-double-float', type: 'Constant Variable' },
    { label: 'least-negative-double-float', type: 'Constant Variable' },
    {
        label: 'least-negative-normalized-double-float',
        type: 'Constant Variable',
    },
    { label: 'most-negative-long-float', type: 'Constant Variable' },
    { label: 'least-negative-long-float', type: 'Constant Variable' },
    {
        label: 'least-negative-normalized-long-float',
        type: 'Constant Variable',
    },
    { label: 'short-float-epsilon', type: 'Constant Variable' },
    { label: 'short-float-negative-epsilon', type: 'Constant Variable' },
    { label: 'single-float-epsilon', type: 'Constant Variable' },
    { label: 'single-float-negative-epsilon', type: 'Constant Variable' },
    { label: 'double-float-epsilon', type: 'Constant Variable' },
    { label: 'double-float-negative-epsilon', type: 'Constant Variable' },
    { label: 'long-float-epsilon', type: 'Constant Variable' },
    { label: 'long-float-negative-epsilon', type: 'Constant Variable' },
    { label: 'arithmetic-error', type: 'Condition Type' },
    { label: 'arithmetic-error-operands', type: 'Function' },
    { label: 'arithmetic-error-operation', type: 'Function' },
    { label: 'division-by-zero', type: 'Condition Type' },
    { label: 'floating-point-invalid-operation', type: 'Condition Type' },
    { label: 'floating-point-inexact', type: 'Condition Type' },
    { label: 'floating-point-overflow', type: 'Condition Type' },
    { label: 'floating-point-underflow', type: 'Condition Type' },
];
